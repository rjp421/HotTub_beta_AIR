<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	preinitialize="preinitializeHandler(event)" 
	creationComplete="creationCompleteHandler(event)"
	windowMoving="titleWin_windowMovingHandler(event)"
	close="handleCloseEvent()" 
	title="Private Message" backgroundColor="#249F18"
	width="555" height="250" >
	
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	
	<s:states>
		<s:State name="mainState"/>
		<s:State name="videoState"/>
	</s:states>
	
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import spark.events.TitleWindowBoundsEvent;
			
			import me.whohacked.app.AppWideDebug_Singleton;
			
			
			public var cmdObj:Object;
			public var msgObj:Object;
			
			// Handle the close button and Cancel button.
			private function handleCloseEvent():void
			{
				cmdObj = null;
				msgObj = null;
				trace("PrivateMessage_PopUpTitleWindow|>  CURRENT openPopUps_AC LENGTH: "+parentApplication.lobby.openPopUps_AC.length);
				parentApplication.lobby.openPopUps_AC.removeItemAt(parentApplication.lobby.openPopUps_AC.getItemIndex(this));
				trace("PrivateMessage_PopUpTitleWindow|>  NEW openPopUps_AC LENGTH: "+parentApplication.lobby.openPopUps_AC.length);
				PopUpManager.removePopUp(this);
			}
			
			protected function preinitializeHandler(event:FlexEvent):void
			{
				trace("PrivateMessage_PopUpTitleWindow|>  CURRENT openPopUps_AC LENGTH: "+parentApplication.lobby.openPopUps_AC.length);
				if (!parentApplication.lobby.openPopUps_AC.contains(this))
				{
					parentApplication.lobby.openPopUps_AC.addItem(this);
					trace("PrivateMessage_PopUpTitleWindow|>  NEW openPopUps_AC LENGTH: "+parentApplication.lobby.openPopUps_AC.length);
				}
				if (parentApplication.lobby.userListPanel.userCmdObj)
				{
					// this is a new PM
					trace("PrivateMessage_PopUpTitleWindow|>  NEW PM OPENED!");
					this.title = "Private Message "+parentApplication.lobby.userListPanel.userCmdObj.selectedUserName;
					this.id = "pm_"+parentApplication.lobby.userListPanel.userCmdObj.selectedUserID;
					cmdObj = new Object();
					cmdObj.fromUserID = parentApplication.lobby.userListPanel.userCmdObj.userID;
					cmdObj.fromUserName = parentApplication.lobby.userListPanel.userCmdObj.userName;
					cmdObj.toUserID = parentApplication.lobby.userListPanel.userCmdObj.selectedUserID;
					cmdObj.toUserName = parentApplication.lobby.userListPanel.userCmdObj.selectedUserName;
					msgObj = cmdObj;
				} else {
					// this is a received PM
					trace("PrivateMessage_PopUpTitleWindow|>  RECEIVED A PM!");
					cmdObj = new Object();
					msgObj = new Object();
				}
				PopUpManager.removePopUp(parentApplication.lobby.userListPanel.popUpMenu);
				parentApplication.lobby.userListPanel.popUpMenu = null;
				parentApplication.lobby.userListPanel.userCmdObj = null;
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				// set the title bar text style
				/*this.titleDisplay.setStyle("color", 0xFFFFFF);
				this.titleDisplay.setStyle("textAlign", "center");
				this.titleDisplay.setStyle("fontSize", 12);
				this.titleDisplay.setStyle("fontType", "bold");
				this.titleDisplay.setStyle("fontFamily", "Verdana");*/
				pmText_TA.setStyle("fontType", "normal");
				
				this.alpha = 0.8;
				
				if (!pmText_TI.hasEventListener("FlexEvent.ENTER")){
					pmText_TI.addEventListener(FlexEvent.ENTER,sendMessageOnEnter);
				}
				if (!sendMsgBtn.hasEventListener("FlexEvent.ENTER")){
					sendMsgBtn.addEventListener(FlexEvent.ENTER,sendMessageOnEnter);
				}
				if (!sendMsgBtn.hasEventListener("MouseEvent.CLICK")){
					sendMsgBtn.addEventListener(MouseEvent.CLICK,sendMessageOnClick);
				}
				if (!cmdObj.userID)
				{
					// this is a received message
				}
				event = null;
			}
			
			protected function cancelBtn_clickHandler(event:MouseEvent):void
			{
				handleCloseEvent();
				event = null;
			}
			
			protected function cleanChatHistory(chat:String):String
			{
				var pattern:RegExp = /<P.*?<\/P>/gi; // "<P"
				var matchArray:Array = chat.match(pattern);
				var newChatArray:Array = matchArray.slice(1, matchArray.length);
				var pattern2:RegExp = /<\/P>,<P/gi;
				var arrString:String = newChatArray.toString().replace(pattern2, "<\/P><P");
				return arrString;
				arrString = null;
				pattern2 = null;
				newChatArray = null;
				matchArray = null;
				pattern = null;
				chat = null;
			}
			
			public function sendMessageOnEnter(event:FlexEvent):void
			{
				if (pmText_TI.text.length > 0)
				{
					sendMessageToServer();
					event = null;
				}
			}
			
			public function sendMessageOnClick(event:MouseEvent):void
			{
				if (pmText_TI.text.length > 0)
				{
					sendMessageToServer();
					event = null;
				}
			}
			
			public function sendMessageToServer():void
			{
				debugMsg("sendMessageToServer->  userName: "+parentApplication.lobby.mediaManager.userName+"  msg: "+pmText_TI.text);
				
				if (!msgObj.toUserID)
				{
					// this is a new PM
					//msgObj.clientID = parentApplication.lobby.mediaManager.clientID;
					msgObj.fromUserID = cmdObj.fromUserID;
					msgObj.fromUserName = cmdObj.fromUserName;
					msgObj.toUserID = cmdObj.toUserID;
					msgObj.toUserName = cmdObj.toUserName;
				}
				
				msgObj.msg = pmText_TI.text;
				
				parentApplication.loginPanel.nc.call("chatManager.sendPrivateMessage", null, parentApplication.lobby.mediaManager.clientID, msgObj);
				
				pmText_TA.htmlText += "<font size='12' color='#000000' face='Verdana'><b>"+parentApplication.lobby.mediaManager.userName+"</b>:  "+ pmText_TI.text +"</font>"+"\n";
				if (pmText_TA.mx_internal::getTextField().numLines >= 30)
				{
					pmText_TA.htmlText = cleanChatHistory(pmText_TA.htmlText);
					pmText_TA.validateNow();
				}
				
				pmText_TA.validateNow();
				pmText_TA.verticalScrollPosition = pmText_TA.maxVerticalScrollPosition;
				pmText_TI.text = "";
			}
			
			public function receivePrivateMessage(eventObj:Object):void
			{
				debugMsg("receivePrivateMessage->  fromUserName: "+eventObj.fromUserName+"  msg: "+eventObj.msg);
				
				if (!msgObj.toUserID)
				{
					// this is a NEW received PM!
					this.title = "Private Message "+eventObj.fromUserName;
					
					if (eventObj.fromUserID == parentApplication.lobby.mediaManager.userID)
					{
						this.id = "pm_"+eventObj.toUserID;
					} else {
						this.id = "pm_"+eventObj.fromUserID;
					}
					
					trace("NEW PM RECEIVED!>>  this.id: "+this.id);
					
					// TEMP
					msgObj.fromUserID = eventObj.toUserID;
					msgObj.fromUserName = eventObj.toUserName;
					msgObj.toUserID = eventObj.fromUserID;
					msgObj.toUserName = eventObj.fromUserName;
				}
				
				if (!parentApplication.lobby.isUserIgnored(parentApplication.lobby.userListPanel.getUserObj(eventObj.fromUserID).acctID, eventObj.fromUserName))
				{
					pmText_TA.htmlText += "<font size='12' color='#000000' face='Verdana'><b>"+parentApplication.lobby.userListPanel.getUserObj(eventObj.userID).userName+"</b>:  "+ eventObj.msg +"</font>"+"\n";
					if(pmText_TA.mx_internal::getTextField().numLines >= 30)
					{
						pmText_TA.htmlText = cleanChatHistory(pmText_TA.htmlText);
						pmText_TA.validateNow();
					}
					pmText_TA.validateNow();
					pmText_TA.verticalScrollPosition = pmText_TA.maxVerticalScrollPosition;
				}
				
				trace("PM RECEIVED!>>  this.id: "+this.id);
				eventObj = null;
			}
			
			
			
			
			
			private function titleWin_windowMovingHandler(event:TitleWindowBoundsEvent):void
			{
				if (event.afterBounds.left < 0) {
					event.afterBounds.left = 0;
				} else if (event.afterBounds.right > systemManager.stage.stageWidth) {
					event.afterBounds.left = systemManager.stage.stageWidth - event.afterBounds.width;
				}
				if (event.afterBounds.top < 0) {
					event.afterBounds.top = 0;
				} else if (event.afterBounds.bottom > systemManager.stage.stageHeight) {
					event.afterBounds.top = systemManager.stage.stageHeight - event.afterBounds.height;
				}
				
				event = null;
			}
			
			
			
			
			private function debugMsg(str:String):void
			{
				AppWideDebug_Singleton.getInstance().newDebugMessage('PrivateMessage_PopUpTitleWindow', str);
			}
			
			
		]]>
	</fx:Script>
	
	
	
	<s:VGroup
		horizontalCenter="0" 
		width="555" height="250">
			
		<mx:TextArea id="pmText_TA"
			width="555" height="{this.height - 25}" 
			horizontalCenter="0"
			textAlign="left" editable="false"
			focusEnabled="false"
			symbolColor="#000000" 
			borderVisible="false"
			contentBackgroundColor="#FFFFFF" 
			contentBackgroundAlpha="0.7"/>
		
		<s:HGroup gap="2" 
			width="555" height="25"
			verticalAlign="middle">
			
			<mx:TextInput id="pmText_TI"
				x="0" y="0"
				width="444" height="25" 
				textAlign="left" contentBackgroundAlpha="0.7"
				focusThickness="1"/>
			
			<s:Button id="sendMsgBtn"
				width="111" height="25"
				right="5"
				label="Send"/>
			
		</s:HGroup>
		
		
	</s:VGroup>
	
	
	
</s:TitleWindow>
